{
  "{\"sourceRoot\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator\",\"filename\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/billServer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator",
      "filename": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/billServer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/billServer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/billServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator",
        "sourceFileName": "billServer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _FileOperations = _interopRequireDefault(require(\"./src/utils/FileOperations\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar session = require('cookie-session'); // Loads the piece of middleware for sessions\n\n/*var bodyParser = require('body-parser'); // Loads the piece of middleware for managing the settings\nvar urlencodedParser = bodyParser.urlencoded({\n    extended: false\n});*/\n//var fileOperations = require(\"./src/utils/FileOperations\");\n\n\nvar app = express();\n/* Using sessions */\n\napp.use(session({\n  secret: 'todotopsecret'\n}));\napp.set('views', path.join(__dirname, 'views/billSeparator'))\n/* If there is no to do list in the session, \nwe create an empty one in the form of an array before continuing */\n.use(function (req, res, next) {\n  if (typeof req.session.todolist == 'undefined') {\n    req.session.todolist = [];\n  }\n\n  next();\n}).use(express.static(path.join(__dirname, 'build'))).use(express.json()).use(express.urlencoded({\n  extended: false\n}))\n/* The to do list and the form are displayed */\n.get('/todo', function (req, res) {\n  var userId = \"data/P1@p.pop.json\";\n\n  var content = _FileOperations.default.getFileContent(userId);\n\n  var userObj = {\n    data: {}\n  };\n\n  if (content) {\n    userObj.data = JSON.parse(content);\n  }\n\n  res.setHeader('Content-Type', 'application/json');\n  res.send(JSON.stringify(userObj)); //res.render('home.ejs', userObj);\n})\n/* Adding an item to the to do list */\n.post('/todo/add/', function (req, res) {\n  if (req.body.newtodo != '') {\n    req.session.todolist.push(req.body.newtodo);\n  }\n\n  res.setHeader('Content-Type', 'application/json');\n  res.send(JSON.stringify({\n    a: 1\n  })); //res.redirect('/todo');\n})\n/* Deletes an item from the to do list */\n.get('/todo/delete/:id', function (req, res) {\n  if (req.params.id != '') {\n    req.session.todolist.splice(req.params.id, 1);\n  }\n\n  res.redirect('/todo');\n})\n/* Redirects to the to do list if the page requested is not found */\n\n/*.use(function(req, res, next) {\n    //res.redirect('/todo');\n})*/\n.get('/*', function (req, res) {\n  res.sendFile(path.join(__dirname, 'build', 'index.html'));\n}).listen(8080);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJpbGxTZXJ2ZXIuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJwYXRoIiwic2Vzc2lvbiIsImFwcCIsInVzZSIsInNlY3JldCIsInNldCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9kb2xpc3QiLCJzdGF0aWMiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwiZ2V0IiwidXNlcklkIiwiY29udGVudCIsIkZpbGVPcGVyYXRpb25zIiwiZ2V0RmlsZUNvbnRlbnQiLCJ1c2VyT2JqIiwiZGF0YSIsIkpTT04iLCJwYXJzZSIsInNldEhlYWRlciIsInNlbmQiLCJzdHJpbmdpZnkiLCJwb3N0IiwiYm9keSIsIm5ld3RvZG8iLCJwdXNoIiwiYSIsInBhcmFtcyIsImlkIiwic3BsaWNlIiwicmVkaXJlY3QiLCJzZW5kRmlsZSIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBLElBQUlBLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFsQjs7QUFDQSxJQUFJRSxPQUFPLEdBQUdGLE9BQU8sQ0FBQyxnQkFBRCxDQUFyQixDLENBQXlDOztBQUN6Qzs7OztBQUlBOzs7QUFFQSxJQUFJRyxHQUFHLEdBQUdKLE9BQU8sRUFBakI7QUFDQTs7QUFFQUksR0FBRyxDQUFDQyxHQUFKLENBQVFGLE9BQU8sQ0FBQztBQUNSRyxFQUFBQSxNQUFNLEVBQUU7QUFEQSxDQUFELENBQWY7QUFHSUYsR0FBRyxDQUFDRyxHQUFKLENBQVEsT0FBUixFQUFpQkwsSUFBSSxDQUFDTSxJQUFMLENBQVVDLFNBQVYsRUFBcUIscUJBQXJCLENBQWpCO0FBQ0E7O0FBREEsQ0FHQ0osR0FIRCxDQUdLLFVBQVNLLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDMUIsTUFBSSxPQUFPRixHQUFHLENBQUNQLE9BQUosQ0FBWVUsUUFBbkIsSUFBZ0MsV0FBcEMsRUFBaUQ7QUFDN0NILElBQUFBLEdBQUcsQ0FBQ1AsT0FBSixDQUFZVSxRQUFaLEdBQXVCLEVBQXZCO0FBQ0g7O0FBQ0RELEVBQUFBLElBQUk7QUFDUCxDQVJELEVBU0NQLEdBVEQsQ0FTS0wsT0FBTyxDQUFDYyxNQUFSLENBQWVaLElBQUksQ0FBQ00sSUFBTCxDQUFVQyxTQUFWLEVBQXFCLE9BQXJCLENBQWYsQ0FUTCxFQVVDSixHQVZELENBVUtMLE9BQU8sQ0FBQ2UsSUFBUixFQVZMLEVBV0NWLEdBWEQsQ0FXS0wsT0FBTyxDQUFDZ0IsVUFBUixDQUFtQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUFuQixDQVhMO0FBWUE7QUFaQSxDQWFDQyxHQWJELENBYUssT0FiTCxFQWFjLFVBQVNSLEdBQVQsRUFBY0MsR0FBZCxFQUFtQjtBQUM3QixNQUFJUSxNQUFNLEdBQUcsb0JBQWI7O0FBQ0EsTUFBSUMsT0FBTyxHQUFHQyx3QkFBZUMsY0FBZixDQUE4QkgsTUFBOUIsQ0FBZDs7QUFDQSxNQUFJSSxPQUFPLEdBQUc7QUFBQ0MsSUFBQUEsSUFBSSxFQUFDO0FBQU4sR0FBZDs7QUFDQSxNQUFHSixPQUFILEVBQVc7QUFDUEcsSUFBQUEsT0FBTyxDQUFDQyxJQUFSLEdBQWVDLElBQUksQ0FBQ0MsS0FBTCxDQUFXTixPQUFYLENBQWY7QUFDSDs7QUFDRFQsRUFBQUEsR0FBRyxDQUFDZ0IsU0FBSixDQUFjLGNBQWQsRUFBOEIsa0JBQTlCO0FBQ0FoQixFQUFBQSxHQUFHLENBQUNpQixJQUFKLENBQVNILElBQUksQ0FBQ0ksU0FBTCxDQUFlTixPQUFmLENBQVQsRUFSNkIsQ0FTN0I7QUFDSCxDQXZCRDtBQXdCQTtBQXhCQSxDQXlCQ08sSUF6QkQsQ0F5Qk0sWUF6Qk4sRUF5Qm9CLFVBQVNwQixHQUFULEVBQWNDLEdBQWQsRUFBbUI7QUFDbkMsTUFBSUQsR0FBRyxDQUFDcUIsSUFBSixDQUFTQyxPQUFULElBQW9CLEVBQXhCLEVBQTRCO0FBQ3hCdEIsSUFBQUEsR0FBRyxDQUFDUCxPQUFKLENBQVlVLFFBQVosQ0FBcUJvQixJQUFyQixDQUEwQnZCLEdBQUcsQ0FBQ3FCLElBQUosQ0FBU0MsT0FBbkM7QUFDSDs7QUFDRHJCLEVBQUFBLEdBQUcsQ0FBQ2dCLFNBQUosQ0FBYyxjQUFkLEVBQThCLGtCQUE5QjtBQUNBaEIsRUFBQUEsR0FBRyxDQUFDaUIsSUFBSixDQUFTSCxJQUFJLENBQUNJLFNBQUwsQ0FBZTtBQUFFSyxJQUFBQSxDQUFDLEVBQUU7QUFBTCxHQUFmLENBQVQsRUFMbUMsQ0FNbkM7QUFDSCxDQWhDRDtBQWlDQTtBQWpDQSxDQWtDQ2hCLEdBbENELENBa0NLLGtCQWxDTCxFQWtDeUIsVUFBU1IsR0FBVCxFQUFjQyxHQUFkLEVBQW1CO0FBQ3hDLE1BQUlELEdBQUcsQ0FBQ3lCLE1BQUosQ0FBV0MsRUFBWCxJQUFpQixFQUFyQixFQUF5QjtBQUNyQjFCLElBQUFBLEdBQUcsQ0FBQ1AsT0FBSixDQUFZVSxRQUFaLENBQXFCd0IsTUFBckIsQ0FBNEIzQixHQUFHLENBQUN5QixNQUFKLENBQVdDLEVBQXZDLEVBQTJDLENBQTNDO0FBQ0g7O0FBQ0R6QixFQUFBQSxHQUFHLENBQUMyQixRQUFKLENBQWEsT0FBYjtBQUNILENBdkNEO0FBd0NBOztBQUNBOzs7QUF6Q0EsQ0E0Q0NwQixHQTVDRCxDQTRDSyxJQTVDTCxFQTRDVyxVQUFDUixHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUNuQkEsRUFBQUEsR0FBRyxDQUFDNEIsUUFBSixDQUFhckMsSUFBSSxDQUFDTSxJQUFMLENBQVVDLFNBQVYsRUFBcUIsT0FBckIsRUFBOEIsWUFBOUIsQ0FBYjtBQUVILENBL0NELEVBZ0RIK0IsTUFoREcsQ0FnREksSUFoREoiLCJzb3VyY2VSb290IjoiL2hvbWUvaS1leGNlZWQuY29tL2RhcnNoYW5sLnNhZ2FyL0RvY3VtZW50cy9Ob2RlL0JpbGxTZXBhcmF0b3IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRmlsZU9wZXJhdGlvbnMgZnJvbSBcIi4vc3JjL3V0aWxzL0ZpbGVPcGVyYXRpb25zXCI7XG52YXIgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbnZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xudmFyIHNlc3Npb24gPSByZXF1aXJlKCdjb29raWUtc2Vzc2lvbicpOyAvLyBMb2FkcyB0aGUgcGllY2Ugb2YgbWlkZGxld2FyZSBmb3Igc2Vzc2lvbnNcbi8qdmFyIGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpOyAvLyBMb2FkcyB0aGUgcGllY2Ugb2YgbWlkZGxld2FyZSBmb3IgbWFuYWdpbmcgdGhlIHNldHRpbmdzXG52YXIgdXJsZW5jb2RlZFBhcnNlciA9IGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7XG4gICAgZXh0ZW5kZWQ6IGZhbHNlXG59KTsqL1xuLy92YXIgZmlsZU9wZXJhdGlvbnMgPSByZXF1aXJlKFwiLi9zcmMvdXRpbHMvRmlsZU9wZXJhdGlvbnNcIik7XG5cbnZhciBhcHAgPSBleHByZXNzKCk7XG4vKiBVc2luZyBzZXNzaW9ucyAqL1xuXG5hcHAudXNlKHNlc3Npb24oe1xuICAgICAgICBzZWNyZXQ6ICd0b2RvdG9wc2VjcmV0J1xuICAgIH0pKVxuICAgIGFwcC5zZXQoJ3ZpZXdzJywgcGF0aC5qb2luKF9fZGlybmFtZSwgJ3ZpZXdzL2JpbGxTZXBhcmF0b3InKSlcbiAgICAvKiBJZiB0aGVyZSBpcyBubyB0byBkbyBsaXN0IGluIHRoZSBzZXNzaW9uLCBcbiAgICB3ZSBjcmVhdGUgYW4gZW1wdHkgb25lIGluIHRoZSBmb3JtIG9mIGFuIGFycmF5IGJlZm9yZSBjb250aW51aW5nICovXG4gICAgLnVzZShmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICBpZiAodHlwZW9mKHJlcS5zZXNzaW9uLnRvZG9saXN0KSA9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmVxLnNlc3Npb24udG9kb2xpc3QgPSBbXTtcbiAgICAgICAgfVxuICAgICAgICBuZXh0KCk7XG4gICAgfSlcbiAgICAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdidWlsZCcpKSlcbiAgICAudXNlKGV4cHJlc3MuanNvbigpKVxuICAgIC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKVxuICAgIC8qIFRoZSB0byBkbyBsaXN0IGFuZCB0aGUgZm9ybSBhcmUgZGlzcGxheWVkICovXG4gICAgLmdldCgnL3RvZG8nLCBmdW5jdGlvbihyZXEsIHJlcykge1xuICAgICAgICB2YXIgdXNlcklkID0gXCJkYXRhL1AxQHAucG9wLmpzb25cIjtcbiAgICAgICAgdmFyIGNvbnRlbnQgPSBGaWxlT3BlcmF0aW9ucy5nZXRGaWxlQ29udGVudCh1c2VySWQpO1xuICAgICAgICBsZXQgdXNlck9iaiA9IHtkYXRhOnt9fTtcbiAgICAgICAgaWYoY29udGVudCl7XG4gICAgICAgICAgICB1c2VyT2JqLmRhdGEgPSBKU09OLnBhcnNlKGNvbnRlbnQpO1xuICAgICAgICB9XG4gICAgICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgICAgIHJlcy5zZW5kKEpTT04uc3RyaW5naWZ5KHVzZXJPYmopKTtcbiAgICAgICAgLy9yZXMucmVuZGVyKCdob21lLmVqcycsIHVzZXJPYmopO1xuICAgIH0pXG4gICAgLyogQWRkaW5nIGFuIGl0ZW0gdG8gdGhlIHRvIGRvIGxpc3QgKi9cbiAgICAucG9zdCgnL3RvZG8vYWRkLycsIGZ1bmN0aW9uKHJlcSwgcmVzKSB7XG4gICAgICAgIGlmIChyZXEuYm9keS5uZXd0b2RvICE9ICcnKSB7XG4gICAgICAgICAgICByZXEuc2Vzc2lvbi50b2RvbGlzdC5wdXNoKHJlcS5ib2R5Lm5ld3RvZG8pO1xuICAgICAgICB9XG4gICAgICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgICAgIHJlcy5zZW5kKEpTT04uc3RyaW5naWZ5KHsgYTogMSB9KSk7XG4gICAgICAgIC8vcmVzLnJlZGlyZWN0KCcvdG9kbycpO1xuICAgIH0pXG4gICAgLyogRGVsZXRlcyBhbiBpdGVtIGZyb20gdGhlIHRvIGRvIGxpc3QgKi9cbiAgICAuZ2V0KCcvdG9kby9kZWxldGUvOmlkJywgZnVuY3Rpb24ocmVxLCByZXMpIHtcbiAgICAgICAgaWYgKHJlcS5wYXJhbXMuaWQgIT0gJycpIHtcbiAgICAgICAgICAgIHJlcS5zZXNzaW9uLnRvZG9saXN0LnNwbGljZShyZXEucGFyYW1zLmlkLCAxKTtcbiAgICAgICAgfVxuICAgICAgICByZXMucmVkaXJlY3QoJy90b2RvJyk7XG4gICAgfSlcbiAgICAvKiBSZWRpcmVjdHMgdG8gdGhlIHRvIGRvIGxpc3QgaWYgdGhlIHBhZ2UgcmVxdWVzdGVkIGlzIG5vdCBmb3VuZCAqL1xuICAgIC8qLnVzZShmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICAvL3Jlcy5yZWRpcmVjdCgnL3RvZG8nKTtcbiAgICB9KSovXG4gICAgLmdldCgnLyonLCAocmVxLCByZXMpPT57XG4gICAgICAgIHJlcy5zZW5kRmlsZShwYXRoLmpvaW4oX19kaXJuYW1lLCAnYnVpbGQnLCAnaW5kZXguaHRtbCcpKTtcbiAgICAgICAgXG4gICAgfSlcbi5saXN0ZW4oODA4MCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "billServer.js"
      ],
      "names": [
        "express",
        "require",
        "path",
        "session",
        "app",
        "use",
        "secret",
        "set",
        "join",
        "__dirname",
        "req",
        "res",
        "next",
        "todolist",
        "static",
        "json",
        "urlencoded",
        "extended",
        "get",
        "userId",
        "content",
        "FileOperations",
        "getFileContent",
        "userObj",
        "data",
        "JSON",
        "parse",
        "setHeader",
        "send",
        "stringify",
        "post",
        "body",
        "newtodo",
        "push",
        "a",
        "params",
        "id",
        "splice",
        "redirect",
        "sendFile",
        "listen"
      ],
      "mappings": ";;AAAA;;;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,gBAAD,CAArB,C,CAAyC;;AACzC;;;;AAIA;;;AAEA,IAAIG,GAAG,GAAGJ,OAAO,EAAjB;AACA;;AAEAI,GAAG,CAACC,GAAJ,CAAQF,OAAO,CAAC;AACRG,EAAAA,MAAM,EAAE;AADA,CAAD,CAAf;AAGIF,GAAG,CAACG,GAAJ,CAAQ,OAAR,EAAiBL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,qBAArB,CAAjB;AACA;;AADA,CAGCJ,GAHD,CAGK,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC1B,MAAI,OAAOF,GAAG,CAACP,OAAJ,CAAYU,QAAnB,IAAgC,WAApC,EAAiD;AAC7CH,IAAAA,GAAG,CAACP,OAAJ,CAAYU,QAAZ,GAAuB,EAAvB;AACH;;AACDD,EAAAA,IAAI;AACP,CARD,EASCP,GATD,CASKL,OAAO,CAACc,MAAR,CAAeZ,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAf,CATL,EAUCJ,GAVD,CAUKL,OAAO,CAACe,IAAR,EAVL,EAWCV,GAXD,CAWKL,OAAO,CAACgB,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAXL;AAYA;AAZA,CAaCC,GAbD,CAaK,OAbL,EAac,UAASR,GAAT,EAAcC,GAAd,EAAmB;AAC7B,MAAIQ,MAAM,GAAG,oBAAb;;AACA,MAAIC,OAAO,GAAGC,wBAAeC,cAAf,CAA8BH,MAA9B,CAAd;;AACA,MAAII,OAAO,GAAG;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAd;;AACA,MAAGJ,OAAH,EAAW;AACPG,IAAAA,OAAO,CAACC,IAAR,GAAeC,IAAI,CAACC,KAAL,CAAWN,OAAX,CAAf;AACH;;AACDT,EAAAA,GAAG,CAACgB,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAhB,EAAAA,GAAG,CAACiB,IAAJ,CAASH,IAAI,CAACI,SAAL,CAAeN,OAAf,CAAT,EAR6B,CAS7B;AACH,CAvBD;AAwBA;AAxBA,CAyBCO,IAzBD,CAyBM,YAzBN,EAyBoB,UAASpB,GAAT,EAAcC,GAAd,EAAmB;AACnC,MAAID,GAAG,CAACqB,IAAJ,CAASC,OAAT,IAAoB,EAAxB,EAA4B;AACxBtB,IAAAA,GAAG,CAACP,OAAJ,CAAYU,QAAZ,CAAqBoB,IAArB,CAA0BvB,GAAG,CAACqB,IAAJ,CAASC,OAAnC;AACH;;AACDrB,EAAAA,GAAG,CAACgB,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAhB,EAAAA,GAAG,CAACiB,IAAJ,CAASH,IAAI,CAACI,SAAL,CAAe;AAAEK,IAAAA,CAAC,EAAE;AAAL,GAAf,CAAT,EALmC,CAMnC;AACH,CAhCD;AAiCA;AAjCA,CAkCChB,GAlCD,CAkCK,kBAlCL,EAkCyB,UAASR,GAAT,EAAcC,GAAd,EAAmB;AACxC,MAAID,GAAG,CAACyB,MAAJ,CAAWC,EAAX,IAAiB,EAArB,EAAyB;AACrB1B,IAAAA,GAAG,CAACP,OAAJ,CAAYU,QAAZ,CAAqBwB,MAArB,CAA4B3B,GAAG,CAACyB,MAAJ,CAAWC,EAAvC,EAA2C,CAA3C;AACH;;AACDzB,EAAAA,GAAG,CAAC2B,QAAJ,CAAa,OAAb;AACH,CAvCD;AAwCA;;AACA;;;AAzCA,CA4CCpB,GA5CD,CA4CK,IA5CL,EA4CW,UAACR,GAAD,EAAMC,GAAN,EAAY;AACnBA,EAAAA,GAAG,CAAC4B,QAAJ,CAAarC,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,OAArB,EAA8B,YAA9B,CAAb;AAEH,CA/CD,EAgDH+B,MAhDG,CAgDI,IAhDJ",
      "sourceRoot": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator",
      "sourcesContent": [
        "import FileOperations from \"./src/utils/FileOperations\";\nvar express = require('express');\nvar path = require('path');\nvar session = require('cookie-session'); // Loads the piece of middleware for sessions\n/*var bodyParser = require('body-parser'); // Loads the piece of middleware for managing the settings\nvar urlencodedParser = bodyParser.urlencoded({\n    extended: false\n});*/\n//var fileOperations = require(\"./src/utils/FileOperations\");\n\nvar app = express();\n/* Using sessions */\n\napp.use(session({\n        secret: 'todotopsecret'\n    }))\n    app.set('views', path.join(__dirname, 'views/billSeparator'))\n    /* If there is no to do list in the session, \n    we create an empty one in the form of an array before continuing */\n    .use(function(req, res, next) {\n        if (typeof(req.session.todolist) == 'undefined') {\n            req.session.todolist = [];\n        }\n        next();\n    })\n    .use(express.static(path.join(__dirname, 'build')))\n    .use(express.json())\n    .use(express.urlencoded({ extended: false }))\n    /* The to do list and the form are displayed */\n    .get('/todo', function(req, res) {\n        var userId = \"data/P1@p.pop.json\";\n        var content = FileOperations.getFileContent(userId);\n        let userObj = {data:{}};\n        if(content){\n            userObj.data = JSON.parse(content);\n        }\n        res.setHeader('Content-Type', 'application/json');\n        res.send(JSON.stringify(userObj));\n        //res.render('home.ejs', userObj);\n    })\n    /* Adding an item to the to do list */\n    .post('/todo/add/', function(req, res) {\n        if (req.body.newtodo != '') {\n            req.session.todolist.push(req.body.newtodo);\n        }\n        res.setHeader('Content-Type', 'application/json');\n        res.send(JSON.stringify({ a: 1 }));\n        //res.redirect('/todo');\n    })\n    /* Deletes an item from the to do list */\n    .get('/todo/delete/:id', function(req, res) {\n        if (req.params.id != '') {\n            req.session.todolist.splice(req.params.id, 1);\n        }\n        res.redirect('/todo');\n    })\n    /* Redirects to the to do list if the page requested is not found */\n    /*.use(function(req, res, next) {\n        //res.redirect('/todo');\n    })*/\n    .get('/*', (req, res)=>{\n        res.sendFile(path.join(__dirname, 'build', 'index.html'));\n        \n    })\n.listen(8080);"
      ]
    },
    "sourceType": "script",
    "mtime": 1547587515015
  },
  "{\"sourceRoot\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator\",\"filename\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils/FileOperations.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator",
      "filename": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils/FileOperations.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils/FileOperations.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils/FileOperations.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils",
        "sourceFileName": "FileOperations.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar fs = require(\"fs\");\n\nvar FileOperations = {\n  getFileContent: function getFileContent(filePath) {\n    var data = \"\";\n\n    try {\n      data = fs.readFileSync(filePath);\n    } catch (e) {\n      console.log(\"Failed to read file : \" + filePath);\n    }\n\n    console.log(data.toString());\n    return data.toString();\n  }\n};\nvar _default = FileOperations;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZpbGVPcGVyYXRpb25zLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsIkZpbGVPcGVyYXRpb25zIiwiZ2V0RmlsZUNvbnRlbnQiLCJmaWxlUGF0aCIsImRhdGEiLCJyZWFkRmlsZVN5bmMiLCJlIiwiY29uc29sZSIsImxvZyIsInRvU3RyaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBSUEsRUFBRSxHQUFHQyxPQUFPLENBQUMsSUFBRCxDQUFoQjs7QUFFQSxJQUFNQyxjQUFjLEdBQUc7QUFDbkJDLEVBQUFBLGNBQWMsRUFBRyx3QkFBU0MsUUFBVCxFQUFrQjtBQUMvQixRQUFJQyxJQUFJLEdBQUcsRUFBWDs7QUFDQSxRQUFHO0FBQ0NBLE1BQUFBLElBQUksR0FBR0wsRUFBRSxDQUFDTSxZQUFILENBQWdCRixRQUFoQixDQUFQO0FBQ0gsS0FGRCxDQUVFLE9BQU1HLENBQU4sRUFBUTtBQUNOQyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyQkFBeUJMLFFBQXJDO0FBQ0g7O0FBQ0RJLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixJQUFJLENBQUNLLFFBQUwsRUFBWjtBQUNBLFdBQU9MLElBQUksQ0FBQ0ssUUFBTCxFQUFQO0FBQ0g7QUFWa0IsQ0FBdkI7ZUFZZVIsYyIsInNvdXJjZVJvb3QiOiIvaG9tZS9pLWV4Y2VlZC5jb20vZGFyc2hhbmwuc2FnYXIvRG9jdW1lbnRzL05vZGUvQmlsbFNlcGFyYXRvci9zcmMvdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZnMgPSByZXF1aXJlKFwiZnNcIik7XG5cbmNvbnN0IEZpbGVPcGVyYXRpb25zID0ge1xuICAgIGdldEZpbGVDb250ZW50IDogZnVuY3Rpb24oZmlsZVBhdGgpe1xuICAgICAgICB2YXIgZGF0YSA9IFwiXCI7XG4gICAgICAgIHRyeXtcbiAgICAgICAgICAgIGRhdGEgPSBmcy5yZWFkRmlsZVN5bmMoZmlsZVBhdGgpO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJGYWlsZWQgdG8gcmVhZCBmaWxlIDogXCIrZmlsZVBhdGgpXG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2coZGF0YS50b1N0cmluZygpKTtcbiAgICAgICAgcmV0dXJuIGRhdGEudG9TdHJpbmcoKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBGaWxlT3BlcmF0aW9uczsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "FileOperations.js"
      ],
      "names": [
        "fs",
        "require",
        "FileOperations",
        "getFileContent",
        "filePath",
        "data",
        "readFileSync",
        "e",
        "console",
        "log",
        "toString"
      ],
      "mappings": ";;;;;;;AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,cAAc,EAAG,wBAASC,QAAT,EAAkB;AAC/B,QAAIC,IAAI,GAAG,EAAX;;AACA,QAAG;AACCA,MAAAA,IAAI,GAAGL,EAAE,CAACM,YAAH,CAAgBF,QAAhB,CAAP;AACH,KAFD,CAEE,OAAMG,CAAN,EAAQ;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAyBL,QAArC;AACH;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,QAAL,EAAZ;AACA,WAAOL,IAAI,CAACK,QAAL,EAAP;AACH;AAVkB,CAAvB;eAYeR,c",
      "sourceRoot": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils",
      "sourcesContent": [
        "var fs = require(\"fs\");\n\nconst FileOperations = {\n    getFileContent : function(filePath){\n        var data = \"\";\n        try{\n            data = fs.readFileSync(filePath);\n        } catch(e){\n            console.log(\"Failed to read file : \"+filePath)\n        }\n        console.log(data.toString());\n        return data.toString();\n    }\n}\nexport default FileOperations;"
      ]
    },
    "sourceType": "script",
    "mtime": 1547127173455
  },
  "{\"sourceRoot\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator\",\"filename\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/billServer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator",
      "filename": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/billServer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/billServer.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/billServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator",
        "sourceFileName": "billServer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _FileOperations = _interopRequireDefault(require(\"./src/utils/FileOperations\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar session = require('cookie-session'); // Loads the piece of middleware for sessions\n\n/*var bodyParser = require('body-parser'); // Loads the piece of middleware for managing the settings\nvar urlencodedParser = bodyParser.urlencoded({\n    extended: false\n});*/\n//var fileOperations = require(\"./src/utils/FileOperations\");\n\n\nvar app = express();\n/* Using sessions */\n\napp.use(session({\n  secret: 'todotopsecret'\n}));\napp.set('views', path.join(__dirname, 'views/billSeparator'))\n/* If there is no to do list in the session, \nwe create an empty one in the form of an array before continuing */\n.use(function (req, res, next) {\n  if (typeof req.session.todolist == 'undefined') {\n    req.session.todolist = [];\n  }\n\n  next();\n}).use(express.static(path.join(__dirname, 'public'))).use(express.json()).use(express.urlencoded({\n  extended: false\n}))\n/* The to do list and the form are displayed */\n.post('/login', function (req, res) {\n  if (req.body.userId == \"TEST\") {\n    var userId = \"P1@p.pop.json\";\n\n    var content = _FileOperations.default.getFileContent(\"src/models/mock/\" + userId);\n\n    var userObj = {\n      data: {}\n    };\n\n    if (content) {\n      userObj.data = JSON.parse(content);\n    }\n\n    res.setHeader('Content-Type', 'application/json');\n    res.json(JSON.stringify(userObj)); //res.sendFile(path.join(__dirname, 'public', 'index.html'));\n  } else {\n    res.sendFile(path.join(__dirname, 'public', 'error.html'));\n  }\n}).get('/todo', function (req, res) {\n  var userId = \"P1@p.pop.json\";\n\n  var content = _FileOperations.default.getFileContent(\"src/models/mock/\" + userId);\n\n  var userObj = {\n    data: {}\n  };\n\n  if (content) {\n    userObj.data = JSON.parse(content);\n  }\n\n  res.setHeader('Content-Type', 'application/json');\n  res.send(JSON.stringify(userObj)); //res.render('home.ejs', userObj);\n})\n/* Adding an item to the to do list */\n.post('/todo/add/', function (req, res) {\n  if (req.body.newtodo != '') {\n    req.session.todolist.push(req.body.newtodo);\n  }\n\n  res.setHeader('Content-Type', 'application/json');\n  res.send(JSON.stringify({\n    a: 1\n  })); //res.redirect('/todo');\n})\n/* Deletes an item from the to do list */\n.get('/todo/delete/:id', function (req, res) {\n  if (req.params.id != '') {\n    req.session.todolist.splice(req.params.id, 1);\n  }\n\n  res.redirect('/todo');\n})\n/* Redirects to the to do list if the page requested is not found */\n\n/*.use(function(req, res, next) {\n    //res.redirect('/todo');\n})*/\n.get('/*', function (req, res) {\n  res.sendFile(path.join(__dirname, 'public', 'index.html'));\n}).listen(8080);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "billServer.js"
      ],
      "names": [
        "express",
        "require",
        "path",
        "session",
        "app",
        "use",
        "secret",
        "set",
        "join",
        "__dirname",
        "req",
        "res",
        "next",
        "todolist",
        "static",
        "json",
        "urlencoded",
        "extended",
        "post",
        "body",
        "userId",
        "content",
        "FileOperations",
        "getFileContent",
        "userObj",
        "data",
        "JSON",
        "parse",
        "setHeader",
        "stringify",
        "sendFile",
        "get",
        "send",
        "newtodo",
        "push",
        "a",
        "params",
        "id",
        "splice",
        "redirect",
        "listen"
      ],
      "mappings": ";;AAAA;;;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,gBAAD,CAArB,C,CAAyC;;AACzC;;;;AAIA;;;AAEA,IAAIG,GAAG,GAAGJ,OAAO,EAAjB;AACA;;AAEAI,GAAG,CAACC,GAAJ,CAAQF,OAAO,CAAC;AACRG,EAAAA,MAAM,EAAE;AADA,CAAD,CAAf;AAGIF,GAAG,CAACG,GAAJ,CAAQ,OAAR,EAAiBL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,qBAArB,CAAjB;AACA;;AADA,CAGCJ,GAHD,CAGK,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC1B,MAAI,OAAOF,GAAG,CAACP,OAAJ,CAAYU,QAAnB,IAAgC,WAApC,EAAiD;AAC7CH,IAAAA,GAAG,CAACP,OAAJ,CAAYU,QAAZ,GAAuB,EAAvB;AACH;;AACDD,EAAAA,IAAI;AACP,CARD,EASCP,GATD,CASKL,OAAO,CAACc,MAAR,CAAeZ,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CATL,EAUCJ,GAVD,CAUKL,OAAO,CAACe,IAAR,EAVL,EAWCV,GAXD,CAWKL,OAAO,CAACgB,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAXL;AAYA;AAZA,CAaCC,IAbD,CAaM,QAbN,EAagB,UAASR,GAAT,EAAcC,GAAd,EAAkB;AAC9B,MAAGD,GAAG,CAACS,IAAJ,CAASC,MAAT,IAAmB,MAAtB,EAA6B;AACzB,QAAIA,MAAM,GAAG,eAAb;;AACA,QAAIC,OAAO,GAAGC,wBAAeC,cAAf,CAA8B,qBAAmBH,MAAjD,CAAd;;AACA,QAAII,OAAO,GAAG;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAd;;AACA,QAAGJ,OAAH,EAAW;AACPG,MAAAA,OAAO,CAACC,IAAR,GAAeC,IAAI,CAACC,KAAL,CAAWN,OAAX,CAAf;AACH;;AACDV,IAAAA,GAAG,CAACiB,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAjB,IAAAA,GAAG,CAACI,IAAJ,CAASW,IAAI,CAACG,SAAL,CAAeL,OAAf,CAAT,EARyB,CASzB;AACH,GAVD,MAUO;AACHb,IAAAA,GAAG,CAACmB,QAAJ,CAAa5B,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,YAA/B,CAAb;AACH;AACJ,CA3BD,EA4BCsB,GA5BD,CA4BK,OA5BL,EA4Bc,UAASrB,GAAT,EAAcC,GAAd,EAAmB;AAC7B,MAAIS,MAAM,GAAG,eAAb;;AACA,MAAIC,OAAO,GAAGC,wBAAeC,cAAf,CAA8B,qBAAmBH,MAAjD,CAAd;;AACA,MAAII,OAAO,GAAG;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAd;;AACA,MAAGJ,OAAH,EAAW;AACPG,IAAAA,OAAO,CAACC,IAAR,GAAeC,IAAI,CAACC,KAAL,CAAWN,OAAX,CAAf;AACH;;AACDV,EAAAA,GAAG,CAACiB,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAjB,EAAAA,GAAG,CAACqB,IAAJ,CAASN,IAAI,CAACG,SAAL,CAAeL,OAAf,CAAT,EAR6B,CAS7B;AACH,CAtCD;AAuCA;AAvCA,CAwCCN,IAxCD,CAwCM,YAxCN,EAwCoB,UAASR,GAAT,EAAcC,GAAd,EAAmB;AACnC,MAAID,GAAG,CAACS,IAAJ,CAASc,OAAT,IAAoB,EAAxB,EAA4B;AACxBvB,IAAAA,GAAG,CAACP,OAAJ,CAAYU,QAAZ,CAAqBqB,IAArB,CAA0BxB,GAAG,CAACS,IAAJ,CAASc,OAAnC;AACH;;AACDtB,EAAAA,GAAG,CAACiB,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAjB,EAAAA,GAAG,CAACqB,IAAJ,CAASN,IAAI,CAACG,SAAL,CAAe;AAAEM,IAAAA,CAAC,EAAE;AAAL,GAAf,CAAT,EALmC,CAMnC;AACH,CA/CD;AAgDA;AAhDA,CAiDCJ,GAjDD,CAiDK,kBAjDL,EAiDyB,UAASrB,GAAT,EAAcC,GAAd,EAAmB;AACxC,MAAID,GAAG,CAAC0B,MAAJ,CAAWC,EAAX,IAAiB,EAArB,EAAyB;AACrB3B,IAAAA,GAAG,CAACP,OAAJ,CAAYU,QAAZ,CAAqByB,MAArB,CAA4B5B,GAAG,CAAC0B,MAAJ,CAAWC,EAAvC,EAA2C,CAA3C;AACH;;AACD1B,EAAAA,GAAG,CAAC4B,QAAJ,CAAa,OAAb;AACH,CAtDD;AAuDA;;AACA;;;AAxDA,CA2DCR,GA3DD,CA2DK,IA3DL,EA2DW,UAACrB,GAAD,EAAMC,GAAN,EAAY;AACnBA,EAAAA,GAAG,CAACmB,QAAJ,CAAa5B,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,YAA/B,CAAb;AAEH,CA9DD,EA+DH+B,MA/DG,CA+DI,IA/DJ",
      "sourceRoot": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator",
      "sourcesContent": [
        "import FileOperations from \"./src/utils/FileOperations\";\nvar express = require('express');\nvar path = require('path');\nvar session = require('cookie-session'); // Loads the piece of middleware for sessions\n/*var bodyParser = require('body-parser'); // Loads the piece of middleware for managing the settings\nvar urlencodedParser = bodyParser.urlencoded({\n    extended: false\n});*/\n//var fileOperations = require(\"./src/utils/FileOperations\");\n\nvar app = express();\n/* Using sessions */\n\napp.use(session({\n        secret: 'todotopsecret'\n    }))\n    app.set('views', path.join(__dirname, 'views/billSeparator'))\n    /* If there is no to do list in the session, \n    we create an empty one in the form of an array before continuing */\n    .use(function(req, res, next) {\n        if (typeof(req.session.todolist) == 'undefined') {\n            req.session.todolist = [];\n        }\n        next();\n    })\n    .use(express.static(path.join(__dirname, 'public')))\n    .use(express.json())\n    .use(express.urlencoded({ extended: false }))\n    /* The to do list and the form are displayed */\n    .post('/login', function(req, res){\n        if(req.body.userId == \"TEST\"){\n            var userId = \"P1@p.pop.json\";\n            var content = FileOperations.getFileContent(\"src/models/mock/\"+userId);\n            let userObj = {data:{}};\n            if(content){\n                userObj.data = JSON.parse(content);\n            }\n            res.setHeader('Content-Type', 'application/json');\n            res.json(JSON.stringify(userObj));\n            //res.sendFile(path.join(__dirname, 'public', 'index.html'));\n        } else {\n            res.sendFile(path.join(__dirname, 'public', 'error.html'));\n        }\n    })\n    .get('/todo', function(req, res) {\n        var userId = \"P1@p.pop.json\";\n        var content = FileOperations.getFileContent(\"src/models/mock/\"+userId);\n        let userObj = {data:{}};\n        if(content){\n            userObj.data = JSON.parse(content);\n        }\n        res.setHeader('Content-Type', 'application/json');\n        res.send(JSON.stringify(userObj));\n        //res.render('home.ejs', userObj);\n    })\n    /* Adding an item to the to do list */\n    .post('/todo/add/', function(req, res) {\n        if (req.body.newtodo != '') {\n            req.session.todolist.push(req.body.newtodo);\n        }\n        res.setHeader('Content-Type', 'application/json');\n        res.send(JSON.stringify({ a: 1 }));\n        //res.redirect('/todo');\n    })\n    /* Deletes an item from the to do list */\n    .get('/todo/delete/:id', function(req, res) {\n        if (req.params.id != '') {\n            req.session.todolist.splice(req.params.id, 1);\n        }\n        res.redirect('/todo');\n    })\n    /* Redirects to the to do list if the page requested is not found */\n    /*.use(function(req, res, next) {\n        //res.redirect('/todo');\n    })*/\n    .get('/*', (req, res)=>{\n        res.sendFile(path.join(__dirname, 'public', 'index.html'));\n        \n    })\n.listen(8080);"
      ]
    },
    "sourceType": "script",
    "mtime": 1547755268151
  },
  "{\"sourceRoot\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator\",\"filename\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils/FileOperations.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator",
      "filename": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils/FileOperations.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils/FileOperations.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils/FileOperations.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils",
        "sourceFileName": "FileOperations.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar fs = require(\"fs\");\n\nvar FileOperations = {\n  getFileContent: function getFileContent(filePath) {\n    var data = \"\";\n\n    try {\n      data = fs.readFileSync(filePath);\n    } catch (e) {\n      console.log(\"Failed to read file : \" + filePath);\n    }\n\n    console.log(data.toString());\n    return data.toString();\n  }\n};\nvar _default = FileOperations;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZpbGVPcGVyYXRpb25zLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsIkZpbGVPcGVyYXRpb25zIiwiZ2V0RmlsZUNvbnRlbnQiLCJmaWxlUGF0aCIsImRhdGEiLCJyZWFkRmlsZVN5bmMiLCJlIiwiY29uc29sZSIsImxvZyIsInRvU3RyaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBSUEsRUFBRSxHQUFHQyxPQUFPLENBQUMsSUFBRCxDQUFoQjs7QUFFQSxJQUFNQyxjQUFjLEdBQUc7QUFDbkJDLEVBQUFBLGNBQWMsRUFBRyx3QkFBU0MsUUFBVCxFQUFrQjtBQUMvQixRQUFJQyxJQUFJLEdBQUcsRUFBWDs7QUFDQSxRQUFHO0FBQ0NBLE1BQUFBLElBQUksR0FBR0wsRUFBRSxDQUFDTSxZQUFILENBQWdCRixRQUFoQixDQUFQO0FBQ0gsS0FGRCxDQUVFLE9BQU1HLENBQU4sRUFBUTtBQUNOQyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyQkFBeUJMLFFBQXJDO0FBQ0g7O0FBQ0RJLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixJQUFJLENBQUNLLFFBQUwsRUFBWjtBQUNBLFdBQU9MLElBQUksQ0FBQ0ssUUFBTCxFQUFQO0FBQ0g7QUFWa0IsQ0FBdkI7ZUFZZVIsYyIsInNvdXJjZVJvb3QiOiIvaG9tZS9pLWV4Y2VlZC5jb20vZGFyc2hhbmwuc2FnYXIvRG9jdW1lbnRzL05vZGUvQmlsbFNlcGFyYXRvci9zcmMvdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZnMgPSByZXF1aXJlKFwiZnNcIik7XG5cbmNvbnN0IEZpbGVPcGVyYXRpb25zID0ge1xuICAgIGdldEZpbGVDb250ZW50IDogZnVuY3Rpb24oZmlsZVBhdGgpe1xuICAgICAgICB2YXIgZGF0YSA9IFwiXCI7XG4gICAgICAgIHRyeXtcbiAgICAgICAgICAgIGRhdGEgPSBmcy5yZWFkRmlsZVN5bmMoZmlsZVBhdGgpO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJGYWlsZWQgdG8gcmVhZCBmaWxlIDogXCIrZmlsZVBhdGgpXG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2coZGF0YS50b1N0cmluZygpKTtcbiAgICAgICAgcmV0dXJuIGRhdGEudG9TdHJpbmcoKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBGaWxlT3BlcmF0aW9uczsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "FileOperations.js"
      ],
      "names": [
        "fs",
        "require",
        "FileOperations",
        "getFileContent",
        "filePath",
        "data",
        "readFileSync",
        "e",
        "console",
        "log",
        "toString"
      ],
      "mappings": ";;;;;;;AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,cAAc,EAAG,wBAASC,QAAT,EAAkB;AAC/B,QAAIC,IAAI,GAAG,EAAX;;AACA,QAAG;AACCA,MAAAA,IAAI,GAAGL,EAAE,CAACM,YAAH,CAAgBF,QAAhB,CAAP;AACH,KAFD,CAEE,OAAMG,CAAN,EAAQ;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAyBL,QAArC;AACH;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,QAAL,EAAZ;AACA,WAAOL,IAAI,CAACK,QAAL,EAAP;AACH;AAVkB,CAAvB;eAYeR,c",
      "sourceRoot": "/home/i-exceed.com/darshanl.sagar/Documents/Node/BillSeparator/src/utils",
      "sourcesContent": [
        "var fs = require(\"fs\");\n\nconst FileOperations = {\n    getFileContent : function(filePath){\n        var data = \"\";\n        try{\n            data = fs.readFileSync(filePath);\n        } catch(e){\n            console.log(\"Failed to read file : \"+filePath)\n        }\n        console.log(data.toString());\n        return data.toString();\n    }\n}\nexport default FileOperations;"
      ]
    },
    "sourceType": "script",
    "mtime": 1547127173455
  }
}